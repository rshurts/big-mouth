service: big-mouth

plugins:
  - serverless-pseudo-parameters
  - serverless-sam
  - serverless-iam-roles-per-function

provider:
  name: aws
  runtime: nodejs6.10

functions:
  get-index:
    handler: functions/get-index.handler
    events:
      - http:
          path: /
          method: get
    environment:
      cognito_user_pool_id: us-east-1_XDkAXwUp5
      cognito_client_id: 63c6bhcqs7m3qbu2t96ld0s012
      restaurants_api: https://rz4fkgnyef.execute-api.us-east-1.amazonaws.com/dev/restaurants
      orders_api: https://rz4fkgnyef.execute-api.us-east-1.amazonaws.com/dev/orders
    iamRoleStatements:
      - Effect: Allow
        Action: execute-api:Invoke
        Resource: arn:aws:execute-api:#{AWS::Region}:#{AWS::AccountId}:*/*/GET/restaurants


  get-restaurants:
    handler: functions/get-restaurants.handler
    events:
      - http:
          path: /restaurants/
          method: get
          authorizer: aws_iam
    environment:
      restaurants_table: restaurants
    iamRoleStatements:
      - Effect: Allow
        Action: dynamodb:scan
        Resource: arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/restaurants

  search-restaurants:
    handler: functions/search-restaurants.handler
    events:
      - http:
          path: /restaurants/search/
          method: post
          authorizer: arn:aws:cognito-idp:#{AWS::Region}:#{AWS::AccountId}:userpool/us-east-1_XDkAXwUp5
    environment:
      restaurants_table: restaurants
    iamRoleStatements:
      - Effect: Allow
        Action: dynamodb:scan
        Resource: arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/restaurants

  place-order:
    handler: functions/place-order.handler
    events:
      - http:
          path: /orders/
          method: post
          authorizer: arn:aws:cognito-idp:#{AWS::Region}:#{AWS::AccountId}:userpool/us-east-1_XDkAXwUp5
    environment:
      order_events_stream: order-events
    iamRoleStatements:
      - Effect: Allow
        Action: kinesis:PutRecord
        Resource: arn:aws:kinesis:#{AWS::Region}:#{AWS::AccountId}:stream/order-events

  notify-restaurant:
    handler: functions/notify-restaurant.handler
    events:
      - stream:
          arn: arn:aws:kinesis:#{AWS::Region}:#{AWS::AccountId}:stream/order-events
    environment:
      order_events_stream: order-events
      restaurant_notification_topic: arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:restaurant-notification
      restaurant_notification_retry_topic: arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:restaurant-notification-retry
    iamRoleStatements:
      - Effect: Allow
        Action: kinesis:PutRecord
        Resource: arn:aws:kinesis:#{AWS::Region}:#{AWS::AccountId}:stream/order-events
      - Effect: Allow
        Action: sns:Publish
        Resource: 
          - arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:restaurant-notification
          - arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:restaurant-notification-retry

  retry-notify-restaurant:
    handler: functions/retry-notify-restaurant.handler
    events:
      - sns: restaurant-notification-retry
    environment:
      order_events_stream: order-events
      restaurant_notification_topic: arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:restaurant-notification
    onError: arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:restaurant-notification-dlq
    iamRoleStatements:
      - Effect: Allow
        Action: kinesis:PutRecord
        Resource: arn:aws:kinesis:#{AWS::Region}:#{AWS::AccountId}:stream/order-events
      - Effect: Allow
        Action: sns:Publish
        Resource: 
          - arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:restaurant-notification

  accept-order:
    handler: functions/accept-order.handler
    events:
      - http:
          path: /orders/accept/
          method: post
    environment:
      order_events_stream: order-events
    iamRoleStatements:
      - Effect: Allow
        Action: kinesis:PutRecord
        Resource: arn:aws:kinesis:#{AWS::Region}:#{AWS::AccountId}:stream/order-events

  notify-users:
    handler: functions/notify-user.handler
    events:
      - stream:
          arn: arn:aws:kinesis:#{AWS::Region}:#{AWS::AccountId}:stream/order-events
    environment:
      order_events_stream: order-events  
      user_notification_topic: arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:user-notification
    iamRoleStatements:
      - Effect: Allow
        Action: kinesis:PutRecord
        Resource: arn:aws:kinesis:#{AWS::Region}:#{AWS::AccountId}:stream/order-events
      - Effect: Allow
        Action: sns:Publish
        Resource: 
          - arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:user-notification

  fulfill-order:
    handler: function/fulfill-order.handler
    events:
      - http:
          path: /orders/complete/
          method: post
    environment:
      order_events_stream: order-events
    iamRoleStatements:
      - Effect: Allow
        Action: kinesis:PutRecord
        Resource: arn:aws:kinesis:#{AWS::Region}:#{AWS::AccountId}:stream/order-events

resources:
  Resources:
    restaurantsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: restaurants
        AttributeDefinitions:
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: name
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    orderEventsStream:
      Type: AWS::Kinesis::Stream
      Properties:
        Name: order-events
        ShardCount: 1

    restaurantNotificationTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: restaurant-notification
        TopicName: restaurant-notification

    restaurantNotificationDeadLetterQueueTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: restaurant-notification-dlq
        TopicName: restaurant-notification-dlq

    userNotificationTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: user-notification
        TopicName: user-notification
